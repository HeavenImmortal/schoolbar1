<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hl.schoolbar.mapper.PostMapper">

    <!--分页查询贴子-->
    <select id="selPagePost" parameterType="com.hl.schoolbar.utils.PostQueryConditions" resultType="java.util.HashMap">
        select a.post_id postId,
        a.title title,
        a.description description,
        b.username username,
        b.avatar avatar,
        c.school_name schoolName,
        a.create_date createDate
        from tb_post a
        left join tb_user b on a.user_id = b.user_id
        left join tb_school  c on a.school_id = c.school_id
        where a.is_delete = 0
        <if test="postQueryConditions.userId!=null and postQueryConditions.userId!=''">
            and a.user_id = #{postQueryConditions.userId}
        </if>
        <if test="postQueryConditions.schoolId!=null and postQueryConditions.schoolId!=''">
            and a.school_id = #{postQueryConditions.schoolId}
        </if>
        <if test="postQueryConditions.title!=null and postQueryConditions.title!=''">
            and a.title like "%"#{postQueryConditions.title}"%"
        </if>
        <if test="postQueryConditions.content!=null and postQueryConditions.content!=''">
            and a.content like "%"#{postQueryConditions.content}"%"
        </if>
    </select>

    <!--查看贴子详情-->
    <select id="selPostInfoById" parameterType="java.lang.Integer" resultType="java.util.HashMap">
        select a.post_id postId,
        a.title title,
        a.user_id userId,
        a.description description,
        a.content_mkd contentMkd,
        a.content_html contentHtml,
        b.username username,
        b.avatar avatar,
        c.school_name schoolName
        from tb_post a
        left join tb_user b on a.user_id = b.user_id
        left join tb_school c on a.school_id = c.school_id
        where a.is_delete = 0 and post_id = #{id}
    </select>

    <!--添加贴子-->
    <insert id="insPost" parameterType="com.hl.schoolbar.entity.Post" useGeneratedKeys="true" keyProperty="postId">
        insert into tb_post values (default ,#{post.title},#{post.description}
        ,#{post.contentMkd},#{post.contentHtml},#{post.userId},#{post.schoolId},#{post.createDate},#{post.isDelete})
    </insert>

    <!--修改贴子-->
    <update id="updPost" parameterType="com.hl.schoolbar.entity.Post">
        update tb_post set title = #{post.title},description=#{post.description},content_mkd=#{post.contentMkd}
        ,content_html=#{post.contentHtml}
        where post_id = #{post.postId}
    </update>

    <!--删除贴子-->
    <update id="delPost" parameterType="java.lang.Integer">
        update tb_post set is_delete = 1 where post_id = #{id}
    </update>

    <!--查询评论数-->
    <select id="selCommentNum" parameterType="java.lang.Integer" resultType="java.lang.Integer">
        select count(1) from tb_comment where post_id = #{postId}
    </select>

    <!--查询点赞数-->
    <select id="selPostPraiseNum" parameterType="java.lang.Integer" resultType="java.lang.Integer">
        select count(1) from tb_post_grade where type = 1 and post_id = #{postId};
    </select>

    <!--查询点踩数-->
    <select id="selPostStepOnNum" parameterType="java.lang.Integer" resultType="java.lang.Integer">
        select count(1) from tb_post_grade where type = 0 and post_id = #{postId};
    </select>

    <!--删除评论-->
    <delete id="delCommentById" parameterType="java.lang.Integer">
        delete from tb_comment where comment_id = #{id}
    </delete>

    <!--添加评论-->
    <insert id="insComment" parameterType="com.hl.schoolbar.entity.Comment">
        insert into tb_comment values (default ,#{comment.userId},#{comment.floor},#{comment.content},#{comment.createDate},#{comment.postId},#{comment.commentPid},#{comment.replyId})
    </insert>

    <select id="selectFloorByPostId" resultType="java.lang.Integer" parameterType="java.lang.Integer">
        select coalesce(Max(floor)+1,0) from tb_comment where post_id = #{postId} and comment_pid = 0 and
        reply_id = 0
    </select>

    <!--查询主评论-->
    <select id="selParentComment" resultType="java.util.HashMap">
        select
        a.comment_id commentId,
        a.user_id userId,
        a.floor floor,
        a.content content,
        a.create_date createDate,
        b.username username,
        b.avatar avatar
        from tb_comment a
        left join tb_user b on a.user_id = b.user_id
        where a.comment_pid = 0
        and a.post_id = #{postId}
        <if test="type==1">
            order by a.create_date desc
        </if>
        <if test="type==0">
            order by a.create_date
        </if>
    </select>

    <!--查询子评论-->
    <select id="selSonCommentByCommentPid"  resultType="java.util.HashMap">
       select
        a.comment_id commentId,
        a.user_id userId,
        a.content content,
        a.create_date createDate,
        b.username username,
        b.avatar avatar,
        a.reply_id replyId,
		d.username replyUsername
        from tb_comment a
        left join tb_user b on a.user_id = b.user_id
		left join tb_comment c on a.reply_id = c.comment_id
		left join tb_user d on c.user_id = d.user_id
        where a.comment_pid = #{commentPid}
        and a.post_id = #{postId}
        order by a.create_date

    </select>


    <!--用户点赞或点踩-->
    <insert id="insUserPostGrade">
        insert into tb_post_grade values (#{userId},#{postId},#{type})
    </insert>

    <!--用户取消点赞或点踩-->
    <delete id="delUserPostGrade" >
        delete from tb_post_grade where type=#{type} and user_id=#{userId} and post_id = #{postId}
    </delete>

    <!--查询用户评论过的贴子id-->
    <select id="selUserGradePost" parameterType="java.lang.Integer" resultType="java.util.HashMap">
        select post_id postId,type type  from tb_post_grade where user_id = #{userId}
    </select>
</mapper>
